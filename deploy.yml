
name: Deploy to GitHub Pages

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Setup Pages
      uses: actions/configure-pages@v4
      with:
        static_site_generator: next
        
    - name: Restore cache
      uses: actions/cache@v3
      with:
        path: |
          .next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
        restore-keys: |
          ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
          
    - name: Install dependencies
      run: npm ci
      
    - name: Build with Next.js
      run: npm run build
      
    - name: Static HTML export with Next.js
      run: npm run export
      
    - name: Upload artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: ./out

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v3

  # Job برای همگام‌سازی با Supabase (اختیاری)
  sync-supabase:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install Supabase CLI
      run: |
        npm install -g @supabase/cli
        
    - name: Deploy Edge Functions to Supabase
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
      run: |
        # اگر Edge Functions وجود داشته باشند
        if [ -d "supabase/functions" ]; then
          supabase functions deploy --project-ref $SUPABASE_PROJECT_ID
        fi
        
    - name: Run Database Migrations
      env:
        SUPABASE_ACCESS_TOKEN: ${{ secrets.SUPABASE_ACCESS_TOKEN }}
        SUPABASE_PROJECT_ID: ${{ secrets.SUPABASE_PROJECT_ID }}
        SUPABASE_DB_PASSWORD: ${{ secrets.SUPABASE_DB_PASSWORD }}
      run: |
        # اگر migration files وجود داشته باشند
        if [ -d "supabase/migrations" ]; then
          supabase db push --project-ref $SUPABASE_PROJECT_ID
        fi

  # Job برای تست‌های خودکار
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run ESLint
      run: npm run lint
      continue-on-error: true
      
    - name: Run Tests
      run: npm test
      continue-on-error: true
      
    - name: Run Type Check
      run: npm run type-check
      continue-on-error: true

  # Job برای بررسی امنیت
  security:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run Security Audit
      run: npm audit --audit-level moderate
      continue-on-error: true
      
    - name: Check for vulnerabilities
      run: |
        if npm audit --audit-level high --json | jq '.vulnerabilities | length' | grep -q '^0$'; then
          echo "No high-severity vulnerabilities found"
        else
          echo "High-severity vulnerabilities detected!"
          npm audit --audit-level high
          exit 1
        fi
      continue-on-error: true

  # Job برای اطلاع‌رسانی
  notify:
    runs-on: ubuntu-latest
    needs: [build, deploy, test, security]
    if: always()
    
    steps:
    - name: Notify Success
      if: needs.deploy.result == 'success'
      run: |
        echo "✅ Deployment successful!"
        echo "🌐 Site URL: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}"
        
    - name: Notify Failure
      if: needs.deploy.result == 'failure'
      run: |
        echo "❌ Deployment failed!"
        echo "Please check the logs for more information."
        
    # اختیاری: ارسال اطلاع‌رسانی به Telegram یا Discord
    - name: Send Telegram Notification
      if: needs.deploy.result == 'success'
      env:
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: |
        if [ ! -z "$TELEGRAM_BOT_TOKEN" ] && [ ! -z "$TELEGRAM_CHAT_ID" ]; then
          MESSAGE="🚀 فروشگاه مجتبی تحریر با موفقیت به‌روزرسانی شد!%0A%0A🌐 لینک: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}%0A📝 Commit: ${{ github.event.head_commit.message }}%0A👤 توسط: ${{ github.actor }}"
          curl -s -X POST "https://api.telegram.org/bot$TELEGRAM_BOT_TOKEN/sendMessage" \
            -d "chat_id=$TELEGRAM_CHAT_ID" \
            -d "text=$MESSAGE" \
            -d "parse_mode=HTML"
        fi
      continue-on-error: true
